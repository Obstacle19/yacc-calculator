Grammar

    0 $accept: input $end

    1 input: expr

    2 expr: expr '+' expr
    3     | expr '-' expr
    4     | expr '*' expr
    5     | expr '/' expr
    6     | '-' expr
    7     | '(' expr ')'
    8     | INTEGER


Terminals, with rules where they appear

    $end (0) 0
    '(' (40) 7
    ')' (41) 7
    '*' (42) 4
    '+' (43) 2
    '-' (45) 3 6
    '/' (47) 5
    error (256)
    INTEGER (258) 8
    UMINUS (259)


Nonterminals, with rules where they appear

    $accept (11)
        on left: 0
    input (12)
        on left: 1
        on right: 0
    expr (13)
        on left: 2 3 4 5 6 7 8
        on right: 1 2 3 4 5 6 7


State 0

    0 $accept: . input $end

    INTEGER  shift, and go to state 1
    '-'      shift, and go to state 2
    '('      shift, and go to state 3

    input  go to state 4
    expr   go to state 5


State 1

    8 expr: INTEGER .

    $default  reduce using rule 8 (expr)


State 2

    6 expr: '-' . expr

    INTEGER  shift, and go to state 1
    '-'      shift, and go to state 2
    '('      shift, and go to state 3

    expr  go to state 6


State 3

    7 expr: '(' . expr ')'

    INTEGER  shift, and go to state 1
    '-'      shift, and go to state 2
    '('      shift, and go to state 3

    expr  go to state 7


State 4

    0 $accept: input . $end

    $end  shift, and go to state 8


State 5

    1 input: expr .
    2 expr: expr . '+' expr
    3     | expr . '-' expr
    4     | expr . '*' expr
    5     | expr . '/' expr

    '+'  shift, and go to state 9
    '-'  shift, and go to state 10
    '*'  shift, and go to state 11
    '/'  shift, and go to state 12

    $default  reduce using rule 1 (input)


State 6

    2 expr: expr . '+' expr
    3     | expr . '-' expr
    4     | expr . '*' expr
    5     | expr . '/' expr
    6     | '-' expr .

    $default  reduce using rule 6 (expr)


State 7

    2 expr: expr . '+' expr
    3     | expr . '-' expr
    4     | expr . '*' expr
    5     | expr . '/' expr
    7     | '(' expr . ')'

    '+'  shift, and go to state 9
    '-'  shift, and go to state 10
    '*'  shift, and go to state 11
    '/'  shift, and go to state 12
    ')'  shift, and go to state 13


State 8

    0 $accept: input $end .

    $default  accept


State 9

    2 expr: expr '+' . expr

    INTEGER  shift, and go to state 1
    '-'      shift, and go to state 2
    '('      shift, and go to state 3

    expr  go to state 14


State 10

    3 expr: expr '-' . expr

    INTEGER  shift, and go to state 1
    '-'      shift, and go to state 2
    '('      shift, and go to state 3

    expr  go to state 15


State 11

    4 expr: expr '*' . expr

    INTEGER  shift, and go to state 1
    '-'      shift, and go to state 2
    '('      shift, and go to state 3

    expr  go to state 16


State 12

    5 expr: expr '/' . expr

    INTEGER  shift, and go to state 1
    '-'      shift, and go to state 2
    '('      shift, and go to state 3

    expr  go to state 17


State 13

    7 expr: '(' expr ')' .

    $default  reduce using rule 7 (expr)


State 14

    2 expr: expr . '+' expr
    2     | expr '+' expr .
    3     | expr . '-' expr
    4     | expr . '*' expr
    5     | expr . '/' expr

    '*'  shift, and go to state 11
    '/'  shift, and go to state 12

    $default  reduce using rule 2 (expr)


State 15

    2 expr: expr . '+' expr
    3     | expr . '-' expr
    3     | expr '-' expr .
    4     | expr . '*' expr
    5     | expr . '/' expr

    '*'  shift, and go to state 11
    '/'  shift, and go to state 12

    $default  reduce using rule 3 (expr)


State 16

    2 expr: expr . '+' expr
    3     | expr . '-' expr
    4     | expr . '*' expr
    4     | expr '*' expr .
    5     | expr . '/' expr

    $default  reduce using rule 4 (expr)


State 17

    2 expr: expr . '+' expr
    3     | expr . '-' expr
    4     | expr . '*' expr
    5     | expr . '/' expr
    5     | expr '/' expr .

    $default  reduce using rule 5 (expr)
